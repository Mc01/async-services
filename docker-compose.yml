version: '3'

services:
  marcin-client:
    container_name: marcin-client
    build:
      context: ./docker
      dockerfile: ./Dockerfile
    volumes:
      - ./client/:/app
    command: /./entrypoint.py
    depends_on:
      - ania-async
      - janek-async
      - magda-async
      - michal-async
    env_file:
      - .env

  ania-async:
    user: "${UID:-1000}"
    container_name: ania-async
    build:
      context: ./services/ania/
      dockerfile: ./async-memes/Dockerfile
      args:
        USER_ID: "${UID:-1000}"
    ports:
      - "8001:5000"
    env_file:
      - ./services/ania/.env
    depends_on:
      - ania-async-engine

  ania-async-engine:
    user: "${UID:-1000}"
    container_name: ania-async-engine
    build:
      context: ./services/ania/
      dockerfile: ./meme-generator/Dockerfile
      args:
        USER_ID: "${UID:-1000}"
    env_file:
      - ./services/ania/.env

  janek-async:
    container_name: janek-async
    build:
      context: ./services/janek/
      dockerfile: ./Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./services/janek/.env
    volumes:
      - ./services/janek/:/app
    ports:
      - "8002:8000"
    depends_on:
      - janek-db

  janek-db:
    container_name: janek-db
    image: postgres
    env_file:
      - ./services/janek/.env

  magda-async:
    container_name: magda-async
    build:
      context: ./services/magda/
      dockerfile: ./docker/backend.dockerfile
    image: async:latest
    restart: always
    ports:
      - "8003:8000"
    depends_on:
      - magda-db
    env_file: ./services/magda/docker/backend.env
    volumes:
      - ./services/magda/:/async_service
    links:
      - magda-db:magda-postgres

  magda-db:
    container_name: magda-db
    volumes:
      - ./services/magda/postgresql:/var/lib/postgresql/data
    image: postgres:9.5-alpine
    env_file: ./services/magda/docker/backend.env

  michal-async:
    container_name: michal-async
    build:
      context: ./services/michal/
      dockerfile: ./Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./services/michal/:/code
    ports:
      - "8004:8000"
    env_file:
      - ./services/michal/.env
